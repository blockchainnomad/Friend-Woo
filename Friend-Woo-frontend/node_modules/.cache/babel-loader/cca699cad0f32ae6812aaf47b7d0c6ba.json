{"ast":null,"code":"var _jsxFileName = \"/Users/jacob/Friend-Woo/Friend-Woo-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './styles/App.css';\nimport React, { useEffect, useState } from 'react';\nimport contract from './contracts/FriendWoo.json';\nimport { ethers } from 'ethers';\nimport wooImg from './assets/woo.png';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Footer from './components/Footer';\nimport Header from './components/Header'; // 상수\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPENSEA_LINK = 'https://testnets.opensea.io/collection/my-friend-woo-v4';\nconst contractAddress = \"0x1D67c2418A018E60cfD8ae5bf67C66983a1004eb\";\nconst abi = contract.abi;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [metamaskError] = useState(null);\n  const [mineStatus, setMineStatus] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Please install Metamask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNft = async () => {\n    try {\n      setMineStatus('mining');\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const nftContract = new ethers.Contract(contractAddress, abi, signer);\n        console.log(\"Initialize payment\");\n        let nftTxn = await nftContract.mintNFTs(1, {\n          value: ethers.utils.parseEther(\"0.01\")\n        });\n        console.log(\"Mining... please wait\");\n        await nftTxn.wait();\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n        setMineStatus('success');\n      } else {\n        setMineStatus('error');\n        console.log(\"Ethereum object does not exist\");\n      }\n    } catch (err) {\n      setMineStatus('error');\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', _chainId => window.location.reload());\n    }\n  }, []); // Render Methods\n\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNft,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Mint a Woo NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [metamaskError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metamask-error\",\n      children: \"Please make sure you are connected to the Rinkeby Network on Metamask!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          opensea: OPENSEA_LINK\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner-img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: wooImg,\n              alt: \"Woo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), currentAccount && mineStatus !== \"mining\" && mintNftButton(), !currentAccount && !mineStatus && connectWalletButton(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mine-submission\",\n            children: [mineStatus === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mineStatus,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"NFT minting successful!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"success-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `https://testnets.opensea.io/${currentAccount}/`,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: \"Click here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" to view your NFT on OpenSea.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 44\n            }, this), mineStatus === 'mining' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mineStatus,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Transaction is mining\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 43\n            }, this), mineStatus === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: mineStatus,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Transaction failed. Make sure you have at least 0.01 Rinkeby ETH in your Metamask wallet and try again.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Footer, {\n          address: contractAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DS7OSipaLbuYoGZCLyRFyAFTkiM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jacob/Friend-Woo/Friend-Woo-frontend/src/App.js"],"names":["React","useEffect","useState","contract","ethers","wooImg","Fragment","Footer","Header","OPENSEA_LINK","contractAddress","abi","App","currentAccount","setCurrentAccount","metamaskError","mineStatus","setMineStatus","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWalletHandler","alert","err","mintNft","provider","providers","Web3Provider","signer","getSigner","nftContract","Contract","nftTxn","mintNFTs","value","utils","parseEther","wait","hash","on","_chainId","location","reload","connectWalletButton","mintNftButton"],"mappings":"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","sourcesContent":["import './styles/App.css';\nimport React, { useEffect, useState } from 'react';\nimport contract from './contracts/FriendWoo.json';\nimport { ethers } from 'ethers';\nimport wooImg from './assets/woo.png';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\n// 상수\nconst OPENSEA_LINK = 'https://testnets.opensea.io/collection/my-friend-woo-v4';\nconst contractAddress = \"0x1D67c2418A018E60cfD8ae5bf67C66983a1004eb\";\nconst abi = contract.abi;\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [metamaskError] = useState(null);\n  const [mineStatus, setMineStatus] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\")\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  }\n\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Please install Metamask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const mintNft = async () => {\n    try {\n\n      setMineStatus('mining');\n\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const nftContract = new ethers.Contract(contractAddress, abi, signer);\n\n        console.log(\"Initialize payment\");\n        let nftTxn = await nftContract.mintNFTs(1, { value: ethers.utils.parseEther(\"0.01\") });\n\n        console.log(\"Mining... please wait\");\n        await nftTxn.wait();\n\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n        setMineStatus('success');\n\n      } else {\n        setMineStatus('error')\n        console.log(\"Ethereum object does not exist\");\n      }\n\n    } catch (err) {\n      setMineStatus('error')\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected();\n\n    if (window.ethereum) {\n      window.ethereum.on('chainChanged', (_chainId) => window.location.reload());\n    }\n  }, [])\n\n  // Render Methods\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n        Connect Wallet\n      </button>\n    );\n  }\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNft} className='cta-button connect-wallet-button'>\n        Mint a Woo NFT\n      </button>\n    );\n  }\n\n\n\n  return (\n    <Fragment>\n      {metamaskError && <div className='metamask-error'>Please make sure you are connected to the Rinkeby Network on Metamask!</div>}\n      <div className=\"App\">\n\n        <div className='container'>\n          <Header opensea={OPENSEA_LINK} />\n          <div className=\"header-container\">\n            <div className='banner-img'>\n              <img src={wooImg} alt=\"Woo\" />\n            </div>\n            {currentAccount && mineStatus !== \"mining\" && mintNftButton()}\n            {!currentAccount && !mineStatus && connectWalletButton()}\n            <div className='mine-submission'>\n              {mineStatus === 'success' && <div className={mineStatus}>\n                <p>NFT minting successful!</p>\n                <p className='success-link'>\n                  <a href={`https://testnets.opensea.io/${currentAccount}/`} target='_blank' rel='noreferrer'>Click here</a>\n                  <span> to view your NFT on OpenSea.</span>\n                </p>\n              </div>}\n              {mineStatus === 'mining' && <div className={mineStatus}>\n                <div className='loader' />\n                <span>Transaction is mining</span>\n              </div>}\n              {mineStatus === 'error' && <div className={mineStatus}>\n                <p>Transaction failed. Make sure you have at least 0.01 Rinkeby ETH in your Metamask wallet and try again.</p>\n              </div>}\n            </div>\n          </div>\n        </div>\n        <div>\n          <Footer address={contractAddress} />\n        </div>\n      </div>\n    </Fragment >\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}